// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum ApplicationStatus { 
  NEW 
  IN_PROGRESS 
  SUBMITTED 
  APPROVED 
  REJECTED 
  ON_HOLD 
}

model User {
  Id           Int      @id @default(autoincrement()) @map("Id")
  Username     String   @unique @map("Username")
  PasswordHash String   @map("PasswordHash")
  Role         Role     @default(USER) @map("Role")
  CreatedAt    DateTime @default(now()) @map("CreatedAt")
  UpdatedAt    DateTime @updatedAt @map("UpdatedAt")
  Application  Application?

  @@map("User")
}

model Application {
  Id            Int       @id @default(autoincrement()) @map("Id")
  UserId        Int       @unique @map("UserId")
  Status        ApplicationStatus @default(NEW) @map("Status")
  PassportNo    String?   @map("PassportNo")
  VisaNo        String?   @map("VisaNo")
  IssueDate     DateTime? @map("IssueDate")
  ExpiryDate    DateTime? @map("ExpiryDate")
  ApplicantName String?   @map("ApplicantName")
  DOB           DateTime? @map("DOB")
  Nationality   String?   @map("Nationality")
  ContactEmail  String?   @map("ContactEmail")
  ContactPhone  String?   @map("ContactPhone")
  AddressLine1  String?   @map("AddressLine1")
  AddressLine2  String?   @map("AddressLine2")
  City          String?   @map("City")
  State         String?   @map("State")
  PostalCode    String?   @map("PostalCode")
  Notes         String?   @db.Text @map("Notes")
  CreatedAt     DateTime  @default(now()) @map("CreatedAt")
  UpdatedAt     DateTime  @updatedAt @map("UpdatedAt")
  User          User      @relation(fields: [UserId], references: [Id], onDelete: Cascade)

  @@map("Application")
}